user
what file does this code come from?

    // Closecloses the process using a SIGINT signal or forcefully killing it if the process
    // does not exit after the timeout. It then closes the pseudo terminal.
    func (p *Process) Close(logger *slog.Logger, timeout time.Duration) error {
    	logger.Info("Closing process")
    	if err := p.execCmd.Process.Signal(os.Interrupt); err != nil {
    		return xerrors.Errorf("failed to send SIGINT to process: %w", err)
    	}

    	exited := make(chan error, 1)
    	go func() {
    		_, err := p.execCmd.Process.Wait()
    		exited <- err
    		close(exited)
    	}()

    	var exitErr error
    	select {
    	case <-time.After(timeout):
    		if err := p.execCmd.Process.Kill(); err != nil {
    			exitErr = xerrors.Errorf("failed to forcefully kill the process: %w", err)
    		}
    		// don't wait for the process to exit to avoid hanging indefinitely
    		// if the process never exits
    	case err := <-exited:
    		var pathErr *os.SyscallError
    		// ECHILD is expected if the process has already exited
    		if err != nil && !(errors.As(err, &pathErr) && pathErr.Err == syscall.ECHILD) {
    			exitErr = xerrors.Errorf("process exited with error: %w", err)
    		}
    	}
    	if err := p.xp.Close(); err != nil {
    		return xerrors.Errorf("failed to close pseudo terminal: %w, exitErr: %w", err, exitErr)
    	}
    	return exitErr
    }

    thinking for 5s

    command

    $ grep -R 'Closecloses the process' -n .

    command.stdout (code: 0, duration: 7.2s)

    ./lib/termexec/termexec.go:74:// Closecloses the process using a SIGINT signal or forcefully killing it
    if the process


    thinking for 15s

    codex
    That’s in the termexec package, in lib/termexec/termexec.go (around line 74).
╭──────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ send a message                                                                                           │
╰──────────────────────────────────────────────────────────────────────────────────────────────────────────╯
  send q or ctrl+c to exit | send "/clear" to reset | send "/help" for commands | press enter to send

